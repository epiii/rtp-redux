{"version":3,"sources":["Nav.js","pages/MyPokemonList.js","components/PokemonList.js","components/Pagination.js","actions/WildPokemonListAction.js","pages/WildPokemonList.js","components/PokemonMoves.js","components/PokemonTypes.js","actions/WildPokemonDetailAction.js","pages/WildPokemonDetail.js","App.js","reducers/WildPokemonListReducer.js","reducers/WildPokemonDetailReducer.js","reducers/indexReducer.js","store.js","index.js"],"names":["Header","Layout","Content","Footer","Nav","style","position","zIndex","width","theme","mode","defaultSelectedKeys","lineHeight","Item","key","to","type","MyPokemonList","useState","pokedex","setPokedex","wildPokemon","setWildPokemon","useEffect","encounterWildPokemon","urlx","min","Math","ceil","max","floor","random","pokeId","axios","get","then","res","console","log","data","imgPath","className","src","id","name","onClick","pokemon","state","filter","p","length","sort","a","b","map","Meta","Card","PokemonList","pokemons","loading","url","split","avatar","paragraph","hoverable","cover","alt","title","description","Pagination","goToNextPage","goToPrevPage","WildPokemonList","currentPageUrl","dispatch","useDispatch","useSelector","results","nextPageUrl","next","prevPageUrl","previous","catch","error","justify","align","urly","PokemonMoves","moves","move","PokemonTypes","types","detailPokemon","WildPokemonDetail","match","setPokemon","setPokemonDex","pokemonTypes","setPokemonTypes","pokemonMoves","setPokemonMoves","setLoading","modalText","setModalText","visible","setVisible","confirmLoading","setConfirmLoading","WildPokemonDetailData","fetchItem","cancel","params","cancelToken","CancelToken","c","status","alert","setPokemonName","prompt","catchPokemon","onOk","setTimeout","onCancel","App","padding","marginTop","margin","background","minHeight","exact","path","component","initialState","WildPokemonListReducer","action","dataState","indexReducer","combineReducers","WildPokemonDetailReducer","middleware","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"uSAIQA,EAA4BC,IAA5BD,OAA4BC,IAApBC,QAAoBD,IAAXE,OA4CVC,MA1Cf,WAYI,OACI,kBAACJ,EAAD,CAAQK,MAAO,CAAEC,SAAU,QAASC,OAAQ,EAAGC,MAAO,SAClD,kBAAC,IAAD,aACIC,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,OACtBN,MAAO,CAAEO,WAAY,SAJzB,OAKS,cAIL,kBAAC,IAAKC,KAAN,CAAWC,IAAI,OACX,kBAAC,IAAD,CAAMC,GAAG,gCACL,kBAAC,IAAD,CAAMC,KAAK,aADf,QAMJ,kBAAC,IAAKH,KAAN,CAAWC,IAAI,UACX,kBAAC,IAAD,CAAMC,GAAG,8BACL,kBAAC,IAAD,CAAMC,KAAK,SADf,qB,iCC6CLC,MA7Ef,WAA0B,IAAD,EAESC,mBAAS,IAFlB,mBAEdC,EAFc,KAELC,EAFK,OAGiBF,mBAAS,IAH1B,mBAGdG,EAHc,KAGDC,EAHC,KAKrBC,qBAAU,WACNC,MACD,IAEH,IAqBMA,EAAuB,WACzB,IAAMC,EAAO,qCAtBF,WACX,IAAMC,EAAMC,KAAKC,KAAK,GAChBC,EAAMF,KAAKG,MAAM,KACvB,OAAOH,KAAKG,MAAMH,KAAKI,UAAYF,EAAMH,EAAM,IAAMA,EAmBDM,GACpDC,IAAMC,IAAIT,GACLU,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,MAChBjB,EAAec,EAAIG,UAQ3BC,EAAU,4EAEd,OACI,yBAAKC,UAAU,eACX,gCACI,wBAAIA,UAAU,SAAd,oBAIJ,6BAASA,UAAU,gBACf,8CACA,yBAAKC,IAAKF,EAAUnB,EAAYsB,GAAK,OAAQF,UAAU,WACvD,4BAAKpB,EAAYuB,MACjB,4BAAQC,QAAS,kBAzCPC,EAyC0BzB,EAxC5CD,GAAW,SAAA2B,GASP,OARmBA,EAAMC,QAAO,SAAAC,GAAC,OAAIH,EAAQH,IAAMM,EAAEN,MAAIO,OAAS,IAG9DH,EAAK,sBAAOA,GAAP,CAAcD,KACbK,MAAK,SAAUC,EAAGC,GACpB,OAAOD,EAAET,GAAKU,EAAEV,MAGjBI,UAEXvB,IAZiB,IAACsB,GAyCwCL,UAAU,aAA5D,UAGJ,6BAASA,UAAU,WACf,uCACA,yBAAKA,UAAU,gBAEPtB,EAAQmC,KAAI,SAAAR,GAAO,OACf,yBAAKL,UAAU,UAAU3B,IAAKgC,EAAQH,IAClC,yBAAKD,IAAKF,EAAUM,EAAQH,GAAK,OAAQF,UAAU,WACnD,wBAAIA,UAAU,gBAAgBK,EAAQF,MACtC,4BAAQC,QAAS,kBA5BtBF,EA4B0CG,EAAQH,QA3BrEvB,GAAW,SAAA2B,GAAK,OAAIA,EAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAEN,IAAMA,QAD5B,IAACA,GA4BuDF,UAAU,UAA5D,a,2CCpExBc,EAASC,IAATD,KAEO,SAASE,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAI5C,OAEID,EAASJ,KAAI,SAAAL,GACT,IAAIxB,EAAOwB,EAAEW,IAAIC,MAAM,KAEvB,OAAIF,EAEI,kBAAC,IAAD,CAAUA,QAASA,EAASG,OAAQ,SAAUC,WAAW,IAIzD,kBAAC,IAAD,CAAMjD,IAAKmC,EAAEL,KAAM7B,GAAE,yCAAoCU,EAAK,KAE1D,kBAAC,IAAD,CACIuC,WAAS,EACT3D,MAAO,CAAEG,MAAO,KAChByD,MAAO,yBAAKC,IAAI,UAAUxB,IAlBpC,4EAkBmDjB,EAAK,GAAK,UAEnD,kBAAC8B,EAAD,CAAMY,MAAOlB,EAAEL,KAAMwB,YAAa,U,YCzB/C,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC/C,OACI,6BAEQA,GAAgB,kBAAC,IAAD,CAAQvD,KAAK,UAAU6B,QAAS0B,GAAhC,QAFxB,OAMQD,GAAgB,kBAAC,IAAD,CAAQtD,KAAK,UAAU6B,QAASyB,GAAhC,SCVzB,ICoGQE,EA1FS,WACtB,IAD4B,EAIgBtD,mBAH/B,qCADe,mBAIrBuD,EAJqB,KAStBC,GATsB,KASXC,eATW,EAW4BC,aACtD,SAAC7B,GAAD,MAAY,CACVY,QAASZ,EAAMyB,gBAAgBb,QAC/BD,SAAUX,EAAMyB,gBAAgBjC,KAAKsC,QAAU9B,EAAMyB,gBAAgBjC,KAAKsC,QAAU,GACpFC,YAAa/B,EAAMyB,gBAAgBjC,KAAKwC,KACxCC,YAAajC,EAAMyB,gBAAgBjC,KAAK0C,SACxCR,eAAgB1B,EAAMyB,gBAAgBjC,KAAK0C,aANvCvB,EAXoB,EAWpBA,SAAUoB,EAXU,EAWVA,YAAaE,EAXH,EAWGA,YAAarB,EAXhB,EAWgBA,QAS5CtB,QAAQC,IAAIoB,GAKZnC,qBAAU,WACRmD,GDrB8B,SAAAA,GAE9BzC,IAAMC,IAAI,qCAELC,MAAK,SAAAI,GAAI,OAAImC,EAAS,CACnB1D,KApByB,wBAqBzBuB,KAAMA,EAAKA,UAEd2C,OAAM,SAAAC,GAAK,OAAIT,EAAS,CACrB1D,KAvBuB,sBAwBvBmE,MAAOA,YCYd,CAACV,IAoBJ,OACE,yBAAKhC,UAAU,eACb,gCACE,wBAAIA,UAAU,SAAd,iBAGF,kBAAC,IAAD,CAAKzB,KAAK,OAAOoE,QAAQ,eAAeC,MAAM,UAC5C,kBAAChB,EAAD,CAEEC,aAAcQ,EA3BD,WDVS,IAACQ,ECW7BZ,GDX6BY,ECWHR,EDXY,SAAAJ,GACtCzC,IAAMC,IAAIoD,GACLnD,MAAK,SAAAI,GAAI,OAAImC,EAAS,CACnB1D,KA5B8B,6BA6B9BuB,KAAMA,EAAKA,UAEd2C,OAAM,SAAAC,GAAK,OAAIT,EAAS,CACrB1D,KAjC4B,2BAkC5BmE,MAAOA,UCIf9C,QAAQC,IAAI,OAAOwC,IAyB8B,KAC3CP,aAAcS,EAxBD,WDFS,IAACM,ECG7BZ,GDH6BY,ECGHN,EDHY,SAAAN,GACtCzC,IAAMC,IAAIoD,GACLnD,MAAK,SAAAI,GAAI,OAAImC,EAAS,CACnB1D,KAtC8B,6BAuC9BuB,KAAMA,EAAKA,UAEd2C,OAAM,SAAAC,GAAK,OAAIT,EAAS,CACrB1D,KAzC4B,2BA0C5BmE,MAAOA,WCkBkC,QAEzC,6BAKJ,kBAAC,IAAD,CAAKnE,KAAK,OAAOoE,QAAQ,eAAeC,MAAM,UAE1C,kBAAC5B,EAAD,CACEE,QAASA,EACTD,SAAUA,KAMlB,6BAQA,6BACE,kBAAC,IAAD,S,SC5FO,SAAS6B,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACnC,OACI,yBAAK/C,UAAU,gBACX+C,EAAMlC,KAAI,SAAAL,GAAC,OACP,yBAAKnC,IAAKmC,EAAEwC,KAAK7C,MACZK,EAAEwC,KAAK7C,UCLb,SAAS8C,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACnC,OACI,yBAAKlD,UAAU,gBACXkD,EAAMrC,KAAI,SAAAL,GAAC,OACP,yBAAKnC,IAAKmC,EAAEjC,KAAK4B,MACZK,EAAEjC,KAAK4B,UCPrB,IAGMgD,EAAgB,SAAC9C,GAAD,MAAc,CACvC9B,KAJ0B,iBAK1BuB,KAAM,CAAEO,aCgJG+C,MA3If,YAAuC,IAAVC,EAAS,EAATA,MAAS,EACN5E,mBAAS,IADH,mBAC7B4B,EAD6B,KACpBiD,EADoB,OAEA7E,mBAAS,IAFT,mBAEjB8E,GAFiB,aAGI9E,mBAAS,IAHb,mBAG7B+E,EAH6B,KAGfC,EAHe,OAIIhF,mBAAS,IAJb,mBAI7BiF,EAJ6B,KAIfC,EAJe,OAKQlF,mBAAS,sCALjB,gCAMNA,oBAAS,IANH,mBAM7ByC,EAN6B,KAMpB0C,EANoB,OAOFnF,mBAAS,wBAPP,mBAO7BoF,EAP6B,KAOlBC,EAPkB,OAQNrF,oBAAS,GARH,mBAQ7BsF,EAR6B,KAQpBC,EARoB,OASQvF,oBAAS,GATjB,mBAS7BwF,EAT6B,KASbC,EATa,KAW9BjC,EAAWC,cACaC,aAAY,SAAC7B,GAAD,OAAWA,EAAM6D,yBAE3DrF,qBAAU,WACRsF,MAEC,IAGH,IAAMA,EAAY,WAEhB,IAAIC,EAiBJ,OAlBAT,GAAW,GAEXpE,IAAMC,IAAN,4CAA+C4D,EAAMiB,OAAOpE,IAAM,CAChEqE,YAAa,IAAI/E,IAAMgF,aAAY,SAAAC,GAAC,OAAIJ,EAASI,OAEhD/E,MAAK,SAAAC,GACc,KAAdA,EAAI+E,QACN9E,QAAQC,IAAIF,GACZiE,GAAW,GACXN,EAAW3D,EAAIG,MACf6D,EAAgBhE,EAAIG,KAAKiD,OACzBU,EAAgB9D,EAAIG,KAAKoD,OAEzBjB,EAASkB,EAAcxD,EAAIG,QAE3B6E,MAAM,QAAShF,EAAI+E,WAGlB,kBAAML,MAGf,GAAInD,EAAS,MAAO,aAEpB,IA0BM0D,EAAiB,WACVC,OAAO,8CAA+C,KAuBnE,OACE,yBAAK7E,UAAU,eACb,gCACE,wBAAIA,UAAU,SAAd,wBAGF,6BAASA,UAAU,gBACjB,yBAAKC,IAzDG,4EAyDYoD,EAAMiB,OAAOpE,GAAK,OAAQF,UAAU,WACxD,kBAAC,IAAD,CAAQzB,KAAK,UAAU6B,QAAS,kBAxDjB,SAACC,GACTnB,KAAKI,SAGL,IACTiE,GAAc,SAAAjD,GAWZ,OATmBA,EAAMC,QAAO,SAAAC,GAAC,OAAIH,EAAQH,IAAMM,EAAEN,MAAIO,OAAS,IAGhEH,EAAK,sBAAOA,GAAP,CAAcD,KACbK,MAAK,SAAUC,EAAGC,GACtB,OAAOD,EAAET,GAAKU,EAAEV,MAIbI,KAETsE,KAEAD,MAAM,0BAoCkCG,CAAazE,KAAnD,SAGA,4BAAKA,EAAQF,OAIf,iCACE,6BAEE,kBAAC,IAAD,CAAQ5B,KAAK,UAAU6B,QAAS,WApCtC4D,GAAW,KAoCL,SAGA,kBAAC,IAAD,CACEtC,MAAM,QACNqC,QAASA,EACTgB,KAAM,kBAtCdjB,EAAa,8CACbI,GAAkB,QAElBc,YAAW,WACThB,GAAW,GACXE,GAAkB,KACjB,MAiCKD,eAAgBA,EAChBgB,SAAU,WA7BlBjB,GAAW,KA+BH,2BAAIH,MAKV,6BAAS7D,UAAU,eACjB,qCACA,kBAACiD,EAAD,CAAcC,MAAOM,IAErB,qCACA,kBAACV,EAAD,CAAcC,MAAOW,O,kBCnIrBjG,EAAoBD,IAApBC,QAAoBD,IAAXE,OAiCjB,IAKewH,EApCf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAStH,MAAO,CAAEuH,QAAS,SAAUC,UAAW,KAC9C,kBAAC,IAAD,CAAYxH,MAAO,CAAEyH,OAAQ,WAC3B,kBAAC,IAAWjH,KAAZ,aACA,kBAAC,IAAWA,KAAZ,aACA,kBAAC,IAAWA,KAAZ,aAGF,yBAAKR,MAAO,CAAE0H,WAAY,OAAQH,QAAS,GAAII,UAAW,MACxD,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW3D,IAC1C,kBAAC,IAAD,CAAQ0D,KAAK,+BAA+BC,UAAW3D,IACvD,kBAAC,IAAD,CAAO0D,KAAK,qCAAqCC,UAAWtC,IAC5D,kBAAC,IAAD,CAAOqC,KAAK,6BAA6BC,UAAWlH,U,yBCrB5DmH,EAAe,CACjB7F,KAAM,GACNoB,SAAS,EACTwB,MAAO,IAyDIkD,EAtDgB,WAAmC,IAAlCtF,EAAiC,uDAAzBqF,EAAcE,EAAW,uCAC7D,OAAQA,EAAOtH,MAEX,IPnB6B,wBOsBzB,OAAO,eACA+B,EADP,CAEIY,SAAS,EACTpB,KAAM+F,EAAO/F,OAIrB,IP5B2B,sBO6BvB,OAAO,eACAQ,EADP,CAEIY,SAAS,EACTwB,MAAOmD,EAAOnD,QAGtB,IPhCkC,6BOiC9B,OAAO,eACApC,EADP,CAEIY,SAAS,EACTwB,MAAOmD,EAAO/F,OAGtB,IPxCgC,2BOyC5B,OAAO,eACAQ,EADP,CAEIY,SAAS,EACTwB,MAAOmD,EAAOnD,QAGtB,IP5CkC,6BO6C9B,OAAO,eACApC,EADP,CAEIY,SAAS,EACTwB,MAAOmD,EAAO/F,OAGtB,IPlDgC,2BOmD5B,OAAO,eACAQ,EADP,CAEIY,SAAS,EACTwB,MAAOmD,EAAOnD,QAKtB,QACI,OAAOpC,ICnEfwF,EAAY,CAAEzF,QAAS,IAYZ8D,EAVe,WAAgC,IAA/B7D,EAA8B,uDAAtBwF,EAAWD,EAAW,uCACzD,OAAQA,EAAOtH,MACX,IJLsB,iBIKtB,IACU8B,EAAYwF,EAAO/F,KAAnBO,QACN,OAAO,eAAKC,EAAZ,CAAmBD,YAEvB,QACI,OAAOC,ICGJyF,EANMC,YAAgB,CAEjC5C,kBAAmB6C,EACnBlE,gBAAiB6D,ICJfM,G,OAAa,CAACC,MAYLC,EATDC,YACVN,EALiB,GAOjBO,YACIC,IAAe,WAAf,EAAmBL,GACnBM,OAAOC,8BAAgCD,OAAOC,iCCQtDC,IAASC,OAUL,kBAAC,IAAD,CAAUP,MAAOA,GACb,kBAAC,EAAD,OAEFQ,SAASC,eAAe,W","file":"static/js/main.71960b19.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu, Icon, Layout, Breadcrumb } from 'antd';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction Nav() {\r\n    const navStyle = {\r\n        color: 'white'\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n            <Menu\r\n                theme=\"dark\"\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={['all']}\r\n                style={{ lineHeight: '64px' }}\r\n                mode=\"horizontal\"\r\n            // onClick={handleClick}\r\n            // selectedKeys={[this.state.current]}\r\n            >\r\n                <Menu.Item key=\"all\">\r\n                    <Link to=\"/rtp-redux/wild-pokemon-list\">\r\n                        <Icon type=\"appstore\" />\r\n                        All\r\n                </Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"alipay\">\r\n                    <Link to=\"/rtp-redux/my-pokemon-list\">\r\n                        <Icon type=\"mail\" />\r\n                        My Collection\r\n                </Link>\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState, useEffect } from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\nimport axios from 'axios';\n\nfunction MyPokemonList() {\n\n    const [pokedex, setPokedex] = useState([])\n    const [wildPokemon, setWildPokemon] = useState({})\n\n    useEffect(() => {\n        encounterWildPokemon()\n    }, [])\n\n    const pokeId = () => {\n        const min = Math.ceil(1)\n        const max = Math.floor(151)\n        return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n\n    const catchPokemon = (pokemon) => {\n        setPokedex(state => {\n            const monExists = (state.filter(p => pokemon.id == p.id).length > 0)\n\n            if (!monExists) {\n                state = [...state, pokemon]\n                state.sort(function (a, b) {\n                    return a.id - b.id\n                })\n            }\n            return state\n        })\n        encounterWildPokemon()\n    }\n\n    const encounterWildPokemon = () => {\n        const urlx = 'https://pokeapi.co/api/v2/pokemon/' + pokeId()\n        axios.get(urlx)\n            .then(res => {\n                console.log(res.data)\n                setWildPokemon(res.data)\n            })\n    }\n\n    const removePokemon = (id) => {\n        setPokedex(state => state.filter(p => p.id != id))\n    }\n\n    let imgPath = 'https://raw.githubusercontent.com/PokeApi/sprites/master/sprites/pokemon/'\n    // let imgPath = 'https://pokeapi.co/api/v2/pokemon/132/encounters'\n    return (\n        <div className=\"app-wrapper\" >\n            <header>\n                <h1 className=\"title\">My Pokemon List</h1>\n                {/* <h3 className=\"subTitle\">pokemon kocheng app</h3> */}\n            </header>\n\n            <section className=\"wild-pokemon\">\n                <h2>wild encounter</h2>\n                <img src={imgPath + wildPokemon.id + '.png'} className=\"sprite\"></img>\n                <h3>{wildPokemon.name}</h3>\n                <button onClick={() => catchPokemon(wildPokemon)} className=\"catch-btn\">catch</button>\n            </section>\n\n            <section className=\"pokedex\">\n                <h2>pokedex</h2>\n                <div className=\"pokedex-list\">\n                    {\n                        pokedex.map(pokemon => (\n                            <div className=\"pokemon\" key={pokemon.id}>\n                                <img src={imgPath + pokemon.id + '.png'} className=\"sprite\" />\n                                <h3 className=\"pokemon-name\">{pokemon.name}</h3>\n                                <button onClick={() => removePokemon(pokemon.id)} className=\"remove\">x</button>\n                            </div>\n                        ))\n                    }\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default MyPokemonList\n// ReactDOM.render(<App />, document.getElementById('root'));","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Skeleton, Card } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function PokemonList({ pokemons, loading }) {\r\n    // console.log(pokemon)\r\n    let imgPath = 'https://raw.githubusercontent.com/PokeApi/sprites/master/sprites/pokemon/'\r\n\r\n    return (\r\n        // <div>{\r\n        pokemons.map(p => {\r\n            let urlx = p.url.split('/')\r\n\r\n            if (loading) {\r\n                return (\r\n                    <Skeleton loading={loading} avatar={'circle'} paragraph={true} />\r\n                )\r\n            } else {\r\n                return (\r\n                    <Link key={p.name} to={`/rtp-redux/wild-pokemon-detail/${urlx[6]}`}>\r\n\r\n                        <Card\r\n                            hoverable\r\n                            style={{ width: 240 }}\r\n                            cover={<img alt=\"example\" src={imgPath + urlx[6] + '.png'} />}\r\n                        >\r\n                            <Meta title={p.name} description={''} />\r\n                        </Card>\r\n                    </Link>\r\n                )\r\n            }\r\n        })\r\n   \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport default function Pagination({ goToNextPage, goToPrevPage }) {\r\n    return (\r\n        <div>\r\n            {\r\n                goToPrevPage && <Button type=\"primary\" onClick={goToPrevPage}>Prev</Button>\r\n            }\r\n            &nbsp;\r\n            {\r\n                goToNextPage && <Button type=\"primary\" onClick={goToNextPage}>Next</Button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nexport const LIST_POKEMONS_SUCCESS = 'LIST_POKEMONS_SUCCESS';\r\nexport const LIST_POKEMONS_ERROR = 'LIST_POKEMONS_ERROR';\r\n\r\nexport const LIST_POKEMONS_NEXT_ERROR = 'LIST_POKEMONS_NEXT_ERROR';\r\nexport const LIST_POKEMONS_NEXT_SUCCESS = 'LIST_POKEMONS_NEXT_SUCCESS';\r\n\r\nexport const LIST_POKEMONS_PREV_SUCCESS = 'LIST_POKEMONS_PREV_SUCCESS';\r\nexport const LIST_POKEMONS_PREV_ERROR = 'LIST_POKEMONS_PREV_ERROR';\r\n\r\n// Get list - Pokemons\r\n// export const listPokemons = (pokemons) => ({\r\n//     type: LIST_POKEMONS,\r\n//     data: { pokemons }\r\n// });\r\n\r\nexport const listPokemons = () => dispatch => {\r\n    // dispatch({ type: LIST_POKEMONS_LOADING });\r\n    axios.get('https://pokeapi.co/api/v2/pokemon')\r\n        // axios.get(urlx)\r\n        .then(data => dispatch({\r\n            type: LIST_POKEMONS_SUCCESS,\r\n            data: data.data\r\n        }))\r\n        .catch(error => dispatch({\r\n            type: LIST_POKEMONS_ERROR,\r\n            error: error\r\n        }))\r\n}\r\n\r\nexport const listPokemonsNext = (urly) => dispatch => {\r\n    axios.get(urly)\r\n        .then(data => dispatch({\r\n            type: LIST_POKEMONS_NEXT_SUCCESS,\r\n            data: data.data\r\n        }))\r\n        .catch(error => dispatch({\r\n            type: LIST_POKEMONS_NEXT_ERROR,\r\n            error: error\r\n        }))\r\n}\r\n\r\nexport const listPokemonsPrev = (urly) => dispatch => {\r\n    axios.get(urly)\r\n        .then(data => dispatch({\r\n            type: LIST_POKEMONS_PREV_SUCCESS,\r\n            data: data.data\r\n        }))\r\n        .catch(error => dispatch({\r\n            type: LIST_POKEMONS_PREV_ERROR,\r\n            error: error\r\n        }))\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BackTop, Skeleton, Switch, List, Avatar, Icon, Row, Col, Slider } from 'antd'\nimport axios from 'axios'\n\nimport PokemonList from '../components/PokemonList'\nimport Pagination from '../components/Pagination'\n\nimport { listPokemons, listPokemonsNext, listPokemonsPrev } from '../actions/WildPokemonListAction'\n\n\nconst WildPokemonList = () => {\n  const urlx = 'https://pokeapi.co/api/v2/pokemon'\n\n  // const [pokemon, setPokemon] = useState([])\n  const [currentPageUrl, setCurrentPageUrl] = useState(urlx)\n  // const [nextPageUrl, setNextPageUrl] = useState()\n  // const [prevPageUrl, setPrevPageUrl] = useState()\n  // const [loading, setLoading] = useState(true)\n\n  const dispatch = useDispatch();\n  // const pokemon = useSelector((state) => state.results);\n  const { pokemons, nextPageUrl, prevPageUrl, loading } = useSelector(\n    (state) => ({\n      loading: state.WildPokemonList.loading,\n      pokemons: state.WildPokemonList.data.results ? state.WildPokemonList.data.results : [],\n      nextPageUrl: state.WildPokemonList.data.next,\n      prevPageUrl: state.WildPokemonList.data.previous,\n      currentPageUrl: state.WildPokemonList.data.previous,\n    })\n  );\n  console.log(pokemons)\n  // const pokemon = useSelector(state => state);\n  // console.log('pok', pokemons)\n  // const pokemon = useSelector((state) => state.WildPokemonListData.results);\n  // console.log(currentPageUrl)\n  useEffect(() => {\n    dispatch(listPokemons())\n  }, [currentPageUrl])\n\n  const goToNextPage = () => {\n    dispatch(listPokemonsNext(nextPageUrl))\n    console.log('next',nextPageUrl)\n  }\n  const goToPrevPage = () => {\n    dispatch(listPokemonsPrev(prevPageUrl))\n  }\n\n  // function goToNextPage() {\n  //   setCurrentPageUrl(nextPageUrl)\n  // }\n  // function goToPrevPage() {\n  //   setCurrentPageUrl(prevPageUrl)\n  // }\n\n  // if (loading) return 'loading...'\n  // console.log(pokemon)\n  // console.log(pokemon[1].name)\n  return (\n    <div className=\"app-wrapper\" >\n      <header>\n        <h1 className=\"title\">Pokemon List</h1>\n      </header>\n\n      <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n        <Pagination\n          // goToNextPage={goToNextPage}\n          goToNextPage={nextPageUrl ? goToNextPage : null}\n          goToPrevPage={prevPageUrl ? goToPrevPage : null}\n        />\n      </Row><br />\n      {\n        // loading ? (\n        //   <Skeleton loading={loading} avatar={'circle'} paragraph={false} />\n        // ) : (\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n          {\n            <PokemonList\n              loading={loading}\n              pokemons={pokemons}\n            />\n          }\n        </Row>\n        // )\n      }\n      <br />\n      {/* <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n        <Pagination\n          goToNextPage={nextPageUrl ? goToNextPage : null}\n          goToPrevPage={prevPageUrl ? goToPrevPage : null}\n        />\n      </Row> */}\n\n      <div>\n        <BackTop />\n      </div>\n\n    </div>\n  );\n}\n\nexport default WildPokemonList;\n","import React from 'react'\r\n\r\nexport default function PokemonMoves({ moves }) {\r\n    return (\r\n        <div className=\"pokemon-move\">{\r\n            moves.map(p => (\r\n                <div key={p.move.name}>\r\n                    {p.move.name}\r\n                </div>\r\n            ))\r\n        }</div >\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PokemonTypes({ types }) {\r\n    return (\r\n        <div className=\"pokemon-type\">{\r\n            types.map(p => (\r\n                <div key={p.type.name}>\r\n                    {p.type.name}\r\n                </div>\r\n            ))\r\n        }</div >\r\n    )\r\n}\r\n","export const DETAIL_POKEMON = 'DETAIL_POKEMON';\r\n\r\n// Get detail - Pokemons\r\nexport const detailPokemon = (pokemon) => ({\r\n    type: DETAIL_POKEMON,\r\n    data: { pokemon }\r\n});\r\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Button } from 'antd'\nimport axios from 'axios'\n\nimport PokemonMoves from '../components/PokemonMoves';\nimport PokemonTypes from '../components/PokemonTypes';\n\nimport { detailPokemon } from '../actions/WildPokemonDetailAction'\n\nfunction WildPokemonDetail({ match }) {\n  const [pokemon, setPokemon] = useState([])\n  const [pokemonDex, setPokemonDex] = useState([])\n  const [pokemonTypes, setPokemonTypes] = useState([])\n  const [pokemonMoves, setPokemonMoves] = useState([])\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon/')\n  const [loading, setLoading] = useState(true)\n  const [modalText, setModalText] = useState('Content of the modal')\n  const [visible, setVisible] = useState(false)\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  const dispatch = useDispatch();\n  const WildPokemonDetailData = useSelector((state) => state.WildPokemonDetailData);\n\n  useEffect(() => {\n    fetchItem()\n    // dispatch(listPokemons())\n  }, [])\n  // }, [currentPageUrl])\n\n  const fetchItem = () => {\n    setLoading(true)\n    let cancel\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${match.params.id}`, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n      .then(res => {\n        if (res.status == 200) {\n          console.log(res)\n          setLoading(false)\n          setPokemon(res.data)\n          setPokemonMoves(res.data.moves)\n          setPokemonTypes(res.data.types)\n\n          dispatch(detailPokemon(res.data))\n        } else {\n          alert('error', res.status)\n        }\n      })\n    return () => cancel()\n  }\n\n  if (loading) return 'loading...'\n\n  let imgPath = 'https://raw.githubusercontent.com/PokeApi/sprites/master/sprites/pokemon/'\n\n  const catchPokemon = (pokemon) => {\n    let prob = Math.random()\n    // console.log(prob)\n\n    if (prob < 0.5) {\n      setPokemonDex(state => {\n        // console.log('before', state)\n        const monExists = (state.filter(p => pokemon.id == p.id).length > 0)\n\n        if (!monExists) {\n          state = [...state, pokemon]\n          state.sort(function (a, b) {\n            return a.id - b.id\n          })\n        }\n        // console.log('after', state)\n        return state\n      })\n      setPokemonName()\n    } else {\n      alert(\"failed :( , try again \");\n    }\n  }\n\n  const setPokemonName = () => {\n    let name = prompt('you got it ^_^, \\ngive your pokemon a name ', '')\n    // console.log(name)\n  }\n\n  const showModal = () => {\n    setVisible(true)\n  };\n\n  const handleOk = () => {\n    setModalText('The modal will be closed after two seconds')\n    setConfirmLoading(true)\n\n    setTimeout(() => {\n      setVisible(false)\n      setConfirmLoading(false)\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    // console.log('Clicked cancel button');\n    setVisible(false)\n  };\n\n  return (\n    <div className=\"app-wrapper\" >\n      <header>\n        <h1 className=\"title\">Wild Pokemon Detail</h1>\n      </header>\n\n      <section className=\"wild-pokemon\">\n        <img src={imgPath + match.params.id + '.png'} className=\"sprite\"></img>\n        <Button type=\"primary\" onClick={() => catchPokemon(pokemon)}>\n          catch\n        </Button>\n        <h3>{pokemon.name}</h3>\n        {/* <button onClick={() => catchPokemon(pokemon)} className=\"catch-btn\">catch</button> */}\n      </section>\n\n      <section>\n        <div>\n          {/* <Button type=\"primary\" onClick={()=>setVisible(true)}> */}\n          <Button type=\"primary\" onClick={() => showModal()}>\n            modal\n          </Button>\n          <Modal\n            title=\"Title\"\n            visible={visible}\n            onOk={() => handleOk()}\n            confirmLoading={confirmLoading}\n            onCancel={() => handleCancel()}\n          >\n            <p>{modalText}</p>\n          </Modal>\n        </div>\n      </section>\n\n      <section className=\"detail-info\">\n        <h3>Types</h3>\n        <PokemonTypes types={pokemonTypes} />\n\n        <h3>Moves</h3>\n        <PokemonMoves moves={pokemonMoves} />\n      </section>\n\n    </div>\n  );\n}\n\nexport default WildPokemonDetail;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Nav from './Nav'\nimport MyPokemonList from './pages/MyPokemonList'\nimport WildPokemonList from './pages/WildPokemonList'\nimport WildPokemonDetail from './pages/WildPokemonDetail'\nimport './index.css'\n// import { useSelector, useDispatch } from 'react-redux'\n\nimport { Layout, Breadcrumb } from 'antd';\nconst { Content, Footer } = Layout;\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Nav />\n\n        <Content style={{ padding: '0 50px', marginTop: 64 }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            <Breadcrumb.Item>App</Breadcrumb.Item>\n          </Breadcrumb>\n\n          <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n            <Switch>\n              {/* <Route exact path=\"/\" component={Home} /> */}\n              <Route exact path=\"/rtp-redux\" component={WildPokemonList} />\n              <Route  path=\"/rtp-redux/wild-pokemon-list\" component={WildPokemonList} />\n              <Route path=\"/rtp-redux/wild-pokemon-detail/:id\" component={WildPokemonDetail} />\n              <Route path=\"/rtp-redux/my-pokemon-list\" component={MyPokemonList} />\n            </Switch>\n          </div>\n\n        </Content>\n\n        {/* </div> */}\n      </Layout>\n\n    </Router>\n  );\n}\nconst Home = () => (\n  <div>\n    <h1>Home Page</h1>\n  </div>\n)\nexport default App;\n","import {\r\n    LIST_POKEMONS_SUCCESS,\r\n    LIST_POKEMONS_ERROR,\r\n\r\n    LIST_POKEMONS_NEXT_SUCCESS,\r\n    LIST_POKEMONS_NEXT_ERROR,\r\n\r\n    LIST_POKEMONS_PREV_SUCCESS,\r\n    LIST_POKEMONS_PREV_ERROR,\r\n} from \"../actions/WildPokemonListAction\" //Import the actions types constant we defined in our actions\r\n// let initialState = { pokemons: [] };\r\nconst initialState = {\r\n    data: [],\r\n    loading: false,\r\n    error: ''\r\n};\r\n\r\nconst WildPokemonListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case LIST_POKEMONS_SUCCESS:\r\n            // let { pokemons } = action.data;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.data,\r\n                // pokemons\r\n            };\r\n\r\n        case LIST_POKEMONS_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n        case LIST_POKEMONS_NEXT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.data\r\n            };\r\n\r\n        case LIST_POKEMONS_NEXT_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n        case LIST_POKEMONS_PREV_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.data\r\n            };\r\n\r\n        case LIST_POKEMONS_PREV_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default WildPokemonListReducer","import { DETAIL_POKEMON } from \"../actions/WildPokemonDetailAction\" //Import the actions types constant we defined in our actions\r\nlet dataState = { pokemon: [] };\r\n\r\nconst WildPokemonDetailData = (state = dataState, action) => {\r\n    switch (action.type) {\r\n        case DETAIL_POKEMON:\r\n            let { pokemon } = action.data;\r\n            return { ...state, pokemon };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default WildPokemonDetailData","import { combineReducers } from 'redux';\r\n\r\n// import MyPokemon from './MyPokemonListReducer'\r\nimport WildPokemonListReducer from './WildPokemonListReducer'\r\nimport WildPokemonDetailReducer from './WildPokemonDetailReducer'\r\n\r\n// Combine all the reducers\r\nconst indexReducer = combineReducers({\r\n    // MyPokemon,\r\n    WildPokemonDetail: WildPokemonDetailReducer,\r\n    WildPokemonList: WildPokemonListReducer,\r\n});\r\n\r\nexport default indexReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport indexReducer from './reducers/indexReducer'\r\nimport promiseMiddleware from 'redux-promise'\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n// const middleware = [promiseMiddleware, thunk]\r\n\r\nconst store = createStore(\r\n    indexReducer, // reducer\r\n    initialState, // init state\r\n    compose( // redux's third party \r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// v1\n// import { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport store from './store'\n// import store from './store/index'\n// import ReduxThunk from 'redux-thunk'\n// import promiseMiddleware from 'redux-promise'\n\n// v2 \n// import rootReducer from './reducers/rootReducer'\n\n// import * as serviceWorker from './serviceWorker';\n// v1\n// const createStorePlain = createStore(rootReducer)\n\n// v2\n// const createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore)\n\nReactDOM.render(\n// v1\n    // <Provider\n    //     store={createStoreWithMiddleware(\n    //         store,\n    //         window._REDUX_DEVTOOLS_EXTENSION__ &&\n    //         window._REDUX_DEVTOOLS_EXTENSION__()\n    //     )}\n    // >\n// v2\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}